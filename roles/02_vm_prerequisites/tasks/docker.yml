---
- name: Clean DNF cache
  ansible.builtin.command: dnf clean all
  changed_when: false

- name: Install required packages for Docker
  ansible.builtin.dnf:
    name:
      - dnf-plugins-core
      - device-mapper-persistent-data
      - lvm2
      - python3-pip
    state: present
  register: prereq_install
  retries: "{{ max_retries }}"
  delay: "{{ retry_delay }}"
  until: prereq_install is succeeded

- name: Add Docker repository
  ansible.builtin.command: >
    dnf config-manager --add-repo
    https://download.docker.com/linux/centos/docker-ce.repo
  args:
    creates: /etc/yum.repos.d/docker-ce.repo

- name: Install Docker CE
  ansible.builtin.dnf:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
  register: docker_install
  retries: "{{ max_retries }}"
  delay: "{{ retry_delay }}"
  until: docker_install is succeeded

- name: Ensure Docker config directory exists
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    mode: "0755"

- name: Configure Docker daemon
  ansible.builtin.copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "live-restore": true,
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "50m",
          "max-file": "3"
        }
      }
    mode: "0644"
  notify: restart docker

- name: Enable and start Docker
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: started

- name: Add ansible user to docker group
  ansible.builtin.user:
    name: ansible
    groups: docker
    append: true

- name: Install Python Docker SDK
  ansible.builtin.pip:
    name: docker>=6.1.0
    state: present
    executable: pip3
