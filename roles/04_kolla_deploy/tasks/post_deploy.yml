---
- name: Wait for OpenStack services to stabilize
  ansible.builtin.pause:
    seconds: 60
    prompt: "Waiting for OpenStack services to start..."

- name: Check if admin-openrc.sh exists
  ansible.builtin.stat:
    path: /etc/kolla/admin-openrc.sh
  register: admin_rc_stat

- name: Create admin-openrc.sh if missing
  ansible.builtin.shell: |
    source /home/ansible/kolla-venv/bin/activate
    kolla-ansible post-deploy -i /etc/ansible/inventory/kolla.ini
  args:
    creates: /etc/kolla/admin-openrc.sh
  when: not admin_rc_stat.stat.exists

- name: Verify admin-openrc.sh was created
  ansible.builtin.stat:
    path: /etc/kolla/admin-openrc.sh
  register: admin_rc_final

- name: Display admin credentials status
  ansible.builtin.debug:
    msg: "Admin credentials file created: {{ admin_rc_final.stat.exists }}"


- name: Fix nova CPU configuration on compute nodes for nested virtualization
  ansible.builtin.shell: |
    # Add cpu_mode if not present
    if ! grep -q "^cpu_mode = " /etc/kolla/nova-compute/nova.conf; then
      sed -i '/^\[libvirt\]/a cpu_mode = custom' /etc/kolla/nova-compute/nova.conf
    else
      sed -i 's/^cpu_mode = .*/cpu_mode = custom/' /etc/kolla/nova-compute/nova.conf
    fi
    
    # Add cpu_model if not present
    if ! grep -q "^cpu_model = " /etc/kolla/nova-compute/nova.conf; then
      sed -i '/^cpu_mode = custom/a cpu_model = Nehalem' /etc/kolla/nova-compute/nova.conf
    else
      sed -i 's/^cpu_model = .*/cpu_model = Nehalem/' /etc/kolla/nova-compute/nova.conf
    fi
    
    # Remove invalid cpu_models (plural)
    sed -i '/^cpu_models = /d' /etc/kolla/nova-compute/nova.conf
  become: true
  delegate_to: "{{ item }}"
  loop: "{{ groups['compute'] }}"
  when: groups['compute'] is defined

- name: Restart nova-compute containers after fixes
  ansible.builtin.command: docker restart nova_compute
  become: true
  delegate_to: "{{ item }}"
  loop: "{{ groups['compute'] }}"
  when: groups['compute'] is defined
  failed_when: false
